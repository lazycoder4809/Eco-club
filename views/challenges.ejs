<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Eco Club - Challenges</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #10b981;
            --primary-light: #34d399;
            --primary-dark: #059669;
            --secondary: #0ea5e9;
            --accent: #f59e0b;
            --dark-bg: #0f172a;
            --darker-bg: #0a0f1c;
            --card-bg: rgba(30, 41, 59, 0.7);
            --text-light: #e2e8f0;
            --text-lighter: #f8fafc;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, var(--darker-bg) 0%, var(--dark-bg) 50%, #1e293b 100%);
            color: var(--text-light);
            overflow-x: hidden;
            line-height: 1.6;
            min-height: 100vh;
        }

        /* Navigation */
        .navbar {
            background: rgba(15, 23, 42, 0.95);
            backdrop-filter: blur(15px);
            padding: 1.2rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.3);
            border-bottom: 1px solid rgba(16, 185, 129, 0.1);
            transform: translateY(-100%);
            animation: slideDown 0.8s ease forwards 0.2s;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1.8rem;
            font-weight: bold;
            color: var(--primary);
            text-shadow: 0 0 10px rgba(16, 185, 129, 0.5);
            transition: transform 0.3s ease;
        }

        .logo:hover {
            transform: scale(1.05);
        }

        .nav-menu {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-menu a {
            color: var(--text-light);
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            transition: all 0.3s ease;
            font-weight: 500;
            position: relative;
            overflow: hidden;
        }

        .nav-menu a::before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--primary);
            transition: width 0.3s ease;
        }

        .nav-menu a:hover::before,
        .nav-menu a.active::before {
            width: 100%;
        }

        .nav-menu a:hover,
        .nav-menu a.active {
            background: rgba(16, 185, 129, 0.15);
            color: var(--primary);
            box-shadow: 0 0 15px rgba(16, 185, 129, 0.3);
        }

        .nav-right {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 0.7rem;
            background: rgba(16, 185, 129, 0.1);
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            border: 1px solid rgba(16, 185, 129, 0.2);
            transition: all 0.3s ease;
            transform: translateX(20px);
            opacity: 0;
            animation: fadeInRight 0.6s ease forwards 0.5s;
        }

        .user-profile:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(16, 185, 129, 0.2);
        }

        .user-avatar-small {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            border: 2px solid var(--primary);
            transition: transform 0.3s ease;
        }

        .user-profile:hover .user-avatar-small {
            transform: scale(1.1);
        }

        .user-name {
            font-weight: 500;
            color: var(--text-lighter);
        }

        .logout-btn {
            background: rgba(239, 68, 68, 0.2);
            color: #fca5a5;
            border: 1px solid rgba(239, 68, 68, 0.3);
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            transform: translateX(20px);
            opacity: 0;
            animation: fadeInRight 0.6s ease forwards 0.7s;
        }

        .logout-btn:hover {
            background: rgba(239, 68, 68, 0.3);
            transform: translateY(-2px);
        }

        .login-btn {
            background: rgba(16, 185, 129, 0.2);
            color: var(--primary);
            border: 1px solid rgba(16, 185, 129, 0.3);
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            text-decoration: none;
            display: inline-block;
        }

        .login-btn:hover {
            background: rgba(16, 185, 129, 0.3);
            transform: translateY(-2px);
        }

        /* Main Container */
        .main-container {
            margin-top: 80px;
            display: grid;
            grid-template-columns: 1fr 350px;
            gap: 2rem;
            padding: 2rem;
            max-width: 1400px;
            margin-left: auto;
            margin-right: auto;
        }

        /* Hero Section */
        .hero-section {
            background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(14, 165, 233, 0.05));
            border-radius: 1.5rem;
            padding: 3rem;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            border: 1px solid rgba(16, 185, 129, 0.1);
            grid-column: 1 / -1;
            transform: translateY(30px);
            opacity: 0;
            animation: fadeInUp 0.8s ease forwards 0.4s;
        }

        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            animation: shimmerLine 3s infinite;
        }

        .hero-title {
            font-size: 3rem;
            font-weight: 800;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 50%, var(--accent) 100%);
            background-clip: text;
            -webkit-background-clip: text;
            color: transparent;
            line-height: 1.1;
            transform: translateY(20px);
            opacity: 0;
            animation: fadeInUp 0.8s ease forwards 0.6s;
        }

        .hero-subtitle {
            font-size: 1.2rem;
            margin-bottom: 2rem;
            color: var(--text-lighter);
            max-width: 600px;
            transform: translateY(20px);
            opacity: 0;
            animation: fadeInUp 0.8s ease forwards 0.8s;
        }

        /* Toolbar */
        .toolbar {
            display: flex;
            flex-wrap: wrap;
            gap: 0.8rem;
            margin: 1.5rem 0;
        }

        .chip {
            padding: 0.6rem 1.2rem;
            border-radius: 2rem;
            font-size: 0.9rem;
            color: var(--text-light);
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transform: translateY(20px);
            opacity: 0;
            animation: fadeInUp 0.8s ease forwards;
        }

        .chip:nth-child(1) { animation-delay: 1s; }
        .chip:nth-child(2) { animation-delay: 1.1s; }
        .chip:nth-child(3) { animation-delay: 1.2s; }
        .chip:nth-child(4) { animation-delay: 1.3s; }
        .chip:nth-child(5) { animation-delay: 1.4s; }
        .chip:nth-child(6) { animation-delay: 1.5s; }

        .chip:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(16, 185, 129, 0.2);
        }

        .chip.active {
            background: rgba(16, 185, 129, 0.2);
            border-color: rgba(16, 185, 129, 0.4);
            color: var(--primary);
        }

        /* Challenges Grid */
        .challenges-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        /* Square Challenge Card */
        .challenge-card {
            position: relative;
            aspect-ratio: 1/1;
            border-radius: 1.5rem;
            background: var(--card-bg);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            transition: all 0.3s ease;
            display: flex;
            flex-direction: column;
            transform: translateY(30px);
            opacity: 0;
        }

        .challenge-card.visible {
            transform: translateY(0);
            opacity: 1;
        }

        .challenge-card:hover {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 0 15px 40px rgba(16, 185, 129, 0.2);
            border: 1px solid rgba(16, 185, 129, 0.3);
        }

        .card-media {
            height: 45%;
            position: relative;
            overflow: hidden;
        }

        .card-media img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .challenge-card:hover .card-media img {
            transform: scale(1.1);
        }

        .date-badge {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: var(--primary);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            font-size: 0.8rem;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            animation: pulse 2s infinite;
        }

        .challenge-card:hover .date-badge {
            transform: scale(1.05);
            background: var(--primary-dark);
        }

        .card-content {
            padding: 1.5rem;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }

        .card-title {
            font-weight: 700;
            font-size: 1.1rem;
            line-height: 1.3;
            margin-bottom: 0.8rem;
            color: var(--text-lighter);
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            transition: color 0.3s ease;
        }

        .challenge-card:hover .card-title {
            color: var(--primary-light);
        }

        .card-location {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--text-light);
            font-size: 0.8rem;
            margin-bottom: 0.8rem;
        }

        .card-description {
            color: var(--text-light);
            font-size: 0.85rem;
            line-height: 1.5;
            margin-bottom: 1rem;
            opacity: 0.85;
            flex-grow: 1;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .card-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 0.4rem;
            margin-bottom: 1rem;
        }

        .card-tag {
            background: rgba(16, 185, 129, 0.15);
            color: var(--primary);
            padding: 0.2rem 0.6rem;
            border-radius: 1rem;
            font-size: 0.7rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .challenge-card:hover .card-tag {
            background: rgba(16, 185, 129, 0.25);
            transform: translateY(-2px);
        }

        /* Progress bar */
        .progress-container {
            width: 100%;
            height: 6px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 3px;
            margin: 0.5rem 0;
            overflow: hidden;
        }

        .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            border-radius: 3px;
            transition: width 0.5s ease;
            position: relative;
        }

        .progress-bar::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            animation: shimmer 2s infinite;
        }

        .card-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: auto;
        }

        .action-btn {
            display: flex;
            align-items: center;
            gap: 0.4rem;
            background: none;
            border: none;
            color: var(--text-light);
            font-size: 0.8rem;
            cursor: pointer;
            transition: all 0.3s ease;
            padding: 0.4rem 0.6rem;
            border-radius: 0.5rem;
        }

        .action-btn:hover {
            color: var(--primary);
            background: rgba(16, 185, 129, 0.1);
            transform: scale(1.05);
        }

        .action-btn.liked {
            color: #f43f5e;
            animation: heartBeat 0.6s ease;
        }

        .submit-btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 0.7rem 1.2rem;
            border-radius: 0.8rem;
            font-weight: 600;
            font-size: 0.85rem;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            letter-spacing: 0.4px;
            box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
            z-index: 1;
        }

        .submit-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .submit-btn:hover::before {
            left: 100%;
        }

        .submit-btn:hover {
            background: var(--primary-dark);
            transform: translateY(-2px) scale(1.05);
            box-shadow: 0 6px 16px rgba(16, 185, 129, 0.4);
        }

        .submit-btn.submitted {
            background: #ef4444;
            box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
            animation: buttonPulse 0.5s ease;
        }

        .submit-btn.submitted:hover {
            background: #dc2626;
            box-shadow: 0 6px 16px rgba(239, 68, 68, 0.4);
        }

        /* Sidebar */
        .sidebar {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .panel {
            background: var(--card-bg);
            border-radius: 1.5rem;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            border: 1px solid rgba(16, 185, 129, 0.1);
            transform: translateY(30px);
            opacity: 0;
            transition: all 0.8s ease;
        }

        .panel.visible {
            transform: translateY(0);
            opacity: 1;
        }

        .panel:hover {
            transform: translateY(-3px);
        }

        .panel h3 {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 1rem;
            color: var(--text-lighter);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        /* Modal for submission */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 1000;
            justify-content: center;
            align-items: center;
            animation: fadeIn 0.3s ease;
        }

        .modal-content {
            background: var(--card-bg);
            padding: 2rem;
            border-radius: 1.5rem;
            width: 90%;
            max-width: 600px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(16, 185, 129, 0.2);
            animation: slideUp 0.4s ease;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-light);
            transition: all 0.3s ease;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-close:hover {
            transform: rotate(90deg);
            color: var(--primary);
            background: rgba(16, 185, 129, 0.1);
        }

        .modal-form {
            display: flex;
            flex-direction: column;
            gap: 1.2rem;
        }

        .modal-form textarea {
            width: 100%;
            min-height: 200px;
            padding: 1.2rem;
            border-radius: 1rem;
            border: 1px solid rgba(255, 255, 255, 0.1);
            background: rgba(15, 23, 42, 0.5);
            font-family: inherit;
            resize: vertical;
            transition: all 0.3s ease;
            font-size: 0.95rem;
            color: var(--text-light);
        }

        .modal-form textarea:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.2);
        }

        .modal-form .submit-btn {
            width: 100%;
            padding: 1rem;
            font-size: 1rem;
        }

        /* Empty State */
        .empty {
            padding: 3rem;
            text-align: center;
            color: var(--text-light);
            font-size: 1.1rem;
            grid-column: 1 / -1;
            transform: translateY(20px);
            opacity: 0;
            animation: fadeInUp 0.8s ease forwards 1s;
        }

        /* Footer */
        footer {
            text-align: center;
            color: var(--text-light);
            font-size: 0.9rem;
            margin-top: 3rem;
            padding: 1.5rem;
            grid-column: 1 / -1;
            transform: translateY(20px);
            opacity: 0;
            animation: fadeInUp 0.8s ease forwards 1.2s;
        }

        /* Floating Action Button */
        .fab {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            width: 60px;
            height: 60px;
            background: var(--primary);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            box-shadow: 0 5px 20px rgba(16, 185, 129, 0.4);
            cursor: pointer;
            z-index: 100;
            transition: all 0.3s ease;
            transform: scale(0);
            animation: fabAppear 0.5s ease forwards 2s;
        }

        .fab:hover {
            transform: scale(1.1);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.6);
        }

        .fab-tooltip {
            position: absolute;
            right: 70px;
            background: var(--card-bg);
            padding: 0.7rem 1rem;
            border-radius: 0.7rem;
            color: var(--text-lighter);
            font-size: 0.9rem;
            white-space: nowrap;
            opacity: 0;
            transform: translateX(10px);
            transition: all 0.3s ease;
            pointer-events: none;
            border: 1px solid rgba(16, 185, 129, 0.2);
        }

        .fab:hover .fab-tooltip {
            opacity: 1;
            transform: translateX(0);
        }

        /* Animations */
        @keyframes slideDown {
            from {
                transform: translateY(-100%);
            }
            to {
                transform: translateY(0);
            }
        }

        @keyframes fadeInUp {
            from {
                transform: translateY(30px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes fadeInRight {
            from {
                transform: translateX(20px);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes shimmerLine {
            0% {
                background-position: -200px 0;
            }
            100% {
                background-position: calc(200px + 100%) 0;
            }
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        @keyframes heartBeat {
            0% { transform: scale(1); }
            25% { transform: scale(1.3); }
            50% { transform: scale(1); }
            75% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }

        @keyframes buttonPulse {
            0% { box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7); }
            70% { box-shadow: 0 0 0 10px rgba(239, 68, 68, 0); }
            100% { box-shadow: 0 0 0 0 rgba(239, 68, 68, 0); }
        }

        @keyframes fabAppear {
            from { transform: scale(0); }
            to { transform: scale(1); }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideUp {
            from { transform: translateY(30px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @keyframes shimmer {
            0% { left: -100%; }
            100% { left: 100%; }
        }

        /* Loading Animation */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: var(--primary);
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Mobile Responsive */
        @media (max-width: 1100px) {
            .main-container {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .navbar {
                padding: 1rem;
            }
            
            .nav-menu {
                display: none;
            }
            
            .main-container {
                padding: 1rem;
                margin-top: 70px;
            }
            
            .hero-title {
                font-size: 2.2rem;
            }
            
            .challenges-grid {
                grid-template-columns: 1fr;
            }

            .fab {
                bottom: 1rem;
                right: 1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar">
        <div class="logo"><i class="fas fa-seedling"></i> Eco Club</div>
        <ul class="nav-menu">
            <li><a href="/home">Home</a></li>
            <li><a href="/events">Events</a></li>
            <li><a href="/challenges" class="active">Challenges</a></li>
            <li><a href="/profile">Profile</a></li>
        </ul>
        <div class="nav-right">
            <% if (typeof user !== 'undefined' && user) { %>
                <div class="user-profile">
                    <img src="<%= user.avatar || 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face' %>" alt="User" class="user-avatar-small">
                    <span class="user-name"><%= user.fullName || 'User' %></span>
                </div>
                <button class="logout-btn" id="logoutBtn">Logout</button>
            <% } else { %>
                <a href="/login" class="login-btn">Login</a>
            <% } %>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="main-container">
        <!-- Hero Section -->
        <section class="hero-section">
            <h1 class="hero-title">Eco Club Challenges</h1>
            <p class="hero-subtitle">Take part in environmental challenges to make a difference and earn rewards. Complete tasks and track your progress.</p>
            
            <div class="toolbar" id="filters" role="tablist" aria-label="Challenge filters">
                <button class="chip active" data-tag="all"><i class="fa-solid fa-layer-group"></i> All Challenges</button>
                <button class="chip" data-tag="daily"><i class="fa-solid fa-calendar-day"></i> Daily</button>
                <button class="chip" data-tag="weekly"><i class="fa-solid fa-calendar-week"></i> Weekly</button>
                <button class="chip" data-tag="monthly"><i class="fa-solid fa-calendar"></i> Monthly</button>
                <button class="chip" data-tag="community"><i class="fa-solid fa-people-group"></i> Community</button>
                <button class="chip" data-tag="achievement"><i class="fa-solid fa-award"></i> Achievements</button>
            </div>
        </section>
        
        <!-- Challenges Grid -->
        <section class="challenges-grid" id="challengesFeed" aria-live="polite">
            <!-- Challenges will be rendered by EJS -->
            <% if (challenges && challenges.length > 0) { %>
                <% challenges.forEach((challenge, index) => { %>
                    <article class="challenge-card" data-id="<%= challenge.id || challenge._id %>" 
                             data-tags="<%= challenge.tags ? challenge.tags.join(',') : '' %>"
                             data-difficulty="<%= challenge.difficulty || 'medium' %>"
                             data-delay="<%= index * 100 %>">
                        <div class="card-media">
                            <img src="<%= challenge.image || 'https://images.unsplash.com/photo-1542601906990-b4d3fb778b09?q=80&w=1200&auto=format&fit=crop' %>" alt="<%= challenge.title || 'Challenge' %>">
                            <div class="date-badge">
                                <% 
                                    const difficulty = challenge.difficulty || 'medium';
                                    const difficultyText = {
                                        'easy': 'Easy',
                                        'medium': 'Medium',
                                        'hard': 'Hard'
                                    }[difficulty] || 'Medium';
                                %>
                                <%= difficultyText %>
                            </div>
                        </div>
                        <div class="card-content">
                            <h3 class="card-title"><%= challenge.title || 'Untitled Challenge' %></h3>
                            <div class="card-location">
                                <i class="fa-solid fa-clock"></i>
                                <span><%= challenge.duration || 'Duration not specified' %></span>
                            </div>
                            <p class="card-description"><%= challenge.description || 'No description provided' %></p>
                            
                            <% if (challenge.progress !== undefined) { %>
                                <div class="progress-container">
                                </div>
                                <div style="font-size:12px;color:var(--text-light);text-align:right">
                                    Progress: <%= challenge.progress %>%
                                </div>
                            <% } %>
                            
                            <div class="card-tags">
                                <% if (challenge.tags && challenge.tags.length > 0) { %>
                                    <% challenge.tags.forEach(tag => { %>
                                        <span class="card-tag"><%= tag %></span>
                                    <% }) %>
                                <% } else { %>
                                    <span class="card-tag">general</span>
                                <% } %>
                            </div>
                            <div class="card-actions">
                                <div class="social-actions">
                                    <button class="action-btn like-btn" aria-label="Like this challenge">
                                        <i class="fa-<%= challenge.liked ? 'solid' : 'regular' %> fa-heart"></i>
                                        <span class="like-count"><%= challenge.likes || 0 %></span>
                                    </button>
                                    <button class="action-btn share-btn" aria-label="Share this challenge">
                                        <i class="fa-solid fa-share-nodes"></i>
                                    </button>
                                </div>
                                <button class="submit-btn <%= challenge.submitted ? 'submitted' : '' %>" 
                                        data-challenge-id="<%= challenge.id || challenge._id %>">
                                    <%= challenge.submitted ? 'Submit Again' : 'Participate' %>
                                </button>
                            </div>
                        </div>
                    </article>
                <% }) %>
            <% } else { %>
                <div class="empty">No active challenges at the moment. Please check back later.</div>
            <% } %>
        </section>
        
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="panel" id="status-filter-panel">
                <h3><i class="fa-solid fa-filter"></i> Quick Filters</h3>
                <div class="toolbar" style="margin:0">
                    <button class="chip active" data-status="all">All</button>
                    <button class="chip" data-status="active">Active</button>
                    <button class="chip" data-status="completed">Completed</button>
                </div>
            </div>
            <div class="panel" id="achievements-panel">
                <h3><i class="fa-solid fa-trophy"></i> My Achievements</h3>
                <div style="display:flex;flex-direction:column;gap:12px">
                    <div style="display:flex;justify-content:space-between;align-items:center">
                        <span style="font-size:14px">Completed Challenges</span>
                        <span style="font-weight:700;color:var(--primary)"><%= typeof completedChallenges !== 'undefined' ? completedChallenges : 0 %></span>
                    </div>
                    <div style="display:flex;justify-content:space-between;align-items:center">
                        <span style="font-size:14px">Current Rank</span>
                        <span style="font-weight:700;color:var(--primary)"><%= typeof userRank !== 'undefined' ? userRank : 'Beginner' %></span>
                    </div>
                    <div style="display:flex;justify-content:space-between;align-items:center">
                        <span style="font-size:14px">Total Points</span>
                        <span style="font-weight:700;color:var(--primary)"><%= typeof totalPoints !== 'undefined' ? totalPoints : 0 %></span>
                    </div>
                </div>
            </div>
        </div>

        <footer>
            © <span id="year"></span> Eco Club • Challenges
        </footer>
    </div>

    <!-- Floating Action Button -->
    <div class="fab" id="fab">
        <i class="fas fa-plus"></i>
        <div class="fab-tooltip">Create Challenge</div>
    </div>

    <!-- Modal for submission -->
    <div class="modal" id="submissionModal" aria-hidden="true">
        <div class="modal-content" role="dialog" aria-modal="true" aria-labelledby="modalTitle">
            <div class="modal-header">
                <h3 id="modalTitle">Submit Solution</h3>
                <button class="modal-close" id="modalClose" aria-label="Close modal">&times;</button>
            </div>
            <form class="modal-form" id="submissionForm" name="submissionForm">
                <input type="hidden" id="challengeIdInput" name="challengeId">
                <textarea name="submission" placeholder="Describe your solution or attach links to photos/videos..." required></textarea>
                <button type="submit" class="submit-btn">Submit Solution</button>
            </form>
        </div>
    </div>

    <!-- Enhanced JavaScript with Animations -->
    <script>
        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('year').textContent = new Date().getFullYear();
            initScrollAnimations();
            setupFAB();
        });

        // Scroll animations
        function initScrollAnimations() {
            const observerOptions = {
                root: null,
                rootMargin: '0px',
                threshold: 0.1
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const delay = entry.target.dataset.delay || 0;
                        setTimeout(() => {
                            entry.target.classList.add('visible');
                        }, delay);
                        observer.unobserve(entry.target);
                    }
                });
            }, observerOptions);

            // Observe elements
            document.querySelectorAll('.challenge-card, .panel').forEach(el => {
                observer.observe(el);
            });
        }

        // Floating Action Button
        function setupFAB() {
            const fab = document.getElementById('fab');
            fab.addEventListener('click', function() {
                // Add bounce effect
                this.style.transform = 'scale(1.2)';
                setTimeout(() => {
                    this.style.transform = 'scale(1)';
                }, 300);
                
                // Show create challenge modal or redirect
                showNotification('Create challenge feature coming soon!', 'info');
            });
        }

        // Enhanced like functionality with animations
        const userLikedChallenges = new Set();

        document.querySelectorAll('.challenge-card').forEach(card => {
            const challengeId = card.dataset.id;
            const likeBtn = card.querySelector('.like-btn');
            const likeCount = card.querySelector('.like-count');
            
            const isAlreadyLiked = likeBtn.querySelector('i').classList.contains('fa-solid');
            if (isAlreadyLiked) {
                userLikedChallenges.add(challengeId);
                likeBtn.classList.add('liked');
            }
            
            likeBtn.addEventListener('click', async () => {
                if (userLikedChallenges.has(challengeId)) return;
                
                likeBtn.disabled = true;
                const originalCount = parseInt(likeCount.textContent);
                
                try {
                    const res = await fetch(`/challenges/${challengeId}/like`, { method: 'POST' });
                    const data = await res.json();

                    if (data.success) {
                        userLikedChallenges.add(challengeId);
                        likeBtn.classList.add('liked');
                        likeBtn.querySelector('i').classList.replace('fa-regular', 'fa-solid');
                        
                        // Animate like count
                        likeCount.style.transform = 'scale(1.5)';
                        setTimeout(() => {
                            likeCount.style.transition = 'transform 0.3s ease';
                            likeCount.style.transform = 'scale(1)';
                        }, 300);
                        
                        likeCount.textContent = data.likes;
                    } else {
                        console.error('Like error:', data.message || data.error);
                    }
                } catch (err) {
                    console.error('Connection error:', err);
                } finally {
                    likeBtn.disabled = false;
                }
            });
        });

        // Modal and submission logic
        const modal = document.getElementById('submissionModal');
        const modalClose = document.getElementById('modalClose');
        const challengeIdInput = document.getElementById('challengeIdInput');
        const submissionForm = document.getElementById('submissionForm');

        // Open modal
        document.querySelectorAll('.submit-btn[data-challenge-id]').forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.preventDefault();
                const challengeId = btn.dataset.challengeId;
                challengeIdInput.value = challengeId;

                // Show challenge title in modal header
                const card = btn.closest('.challenge-card');
                if (card) {
                    const title = card.querySelector('.card-title')?.textContent?.trim();
                    if (title) document.getElementById('modalTitle').textContent = `Submit Solution: ${title}`;
                }

                modal.style.display = 'flex';
                modal.setAttribute('aria-hidden', 'false');
                submissionForm.querySelector('textarea').focus();
            });
        });

        // Close handlers
        modalClose.addEventListener('click', () => {
            modal.style.display = 'none';
            modal.setAttribute('aria-hidden', 'true');
            document.getElementById('modalTitle').textContent = 'Submit Solution';
        });
        
        window.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.style.display = 'none';
                modal.setAttribute('aria-hidden', 'true');
                document.getElementById('modalTitle').textContent = 'Submit Solution';
            }
        });

        // Enhanced submission form
        submissionForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const challengeId = challengeIdInput.value;
            const submissionText = submissionForm.querySelector('textarea[name="submission"]').value.trim();
            
            if (!challengeId) {
                showNotification('Failed to read challenge ID. Please refresh and try again.', 'error');
                return;
            }
            
            if (!submissionText) {
                showNotification('Please describe your solution.', 'error');
                return;
            }

            const submitBtn = submissionForm.querySelector('button[type="submit"]');
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<div class="loading"></div>';

            try {
                const res = await fetch(`/challenges/${encodeURIComponent(challengeId)}/submit`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ challengeId, submission: submissionText })
                });

                const data = await res.json();

                if (res.ok && data && data.success) {
                    const cardBtn = document.querySelector(`.submit-btn[data-challenge-id="${challengeId}"]`);
                    if (cardBtn) {
                        cardBtn.classList.add('submitted');
                        cardBtn.textContent = 'Submit Again';
                        cardBtn.style.animation = 'buttonPulse 0.5s ease';
                    }

                    showNotification('Solution submitted successfully!', 'success');
                    submissionForm.reset();
                    modal.style.display = 'none';
                    modal.setAttribute('aria-hidden', 'true');
                    document.getElementById('modalTitle').textContent = 'Submit Solution';
                } else {
                    console.error('Submit error', data);
                    showNotification('Submission error: ' + (data?.message || 'server returned an error'), 'error');
                }
            } catch (err) {
                console.error('Network error submit', err);
                showNotification('Network error while submitting solution.', 'error');
            } finally {
                submitBtn.disabled = false;
                submitBtn.textContent = 'Submit Solution';
            }
        });

        // Enhanced notification function
        function showNotification(message, type = 'info') {
            const existingNotification = document.querySelector('.notification');
            if (existingNotification) existingNotification.remove();
            
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `
                <i class="fa-solid fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
                <span>${message}</span>
            `;
            notification.style.cssText = `
                position: fixed;
                top: 100px;
                right: 20px;
                padding: 12px 20px;
                border-radius: 12px;
                color: white;
                font-weight: 500;
                z-index: 1000;
                animation: slideInRight 0.3s ease;
                display: flex;
                align-items: center;
                gap: 10px;
                ${type === 'success' ? 'background: linear-gradient(135deg, #10b981, #059669);' : ''}
                ${type === 'error' ? 'background: linear-gradient(135deg, #ef4444, #dc2626);' : ''}
                ${type === 'info' ? 'background: linear-gradient(135deg, #3b82f6, #1d4ed8);' : ''}
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.animation = 'slideOutRight 0.3s ease';
                setTimeout(() => notification.remove(), 300);
            }, 3000);
        }

        // Add enhanced CSS for notifications
        const enhancedStyle = document.createElement('style');
        enhancedStyle.textContent = `
            @keyframes slideInRight {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
            @keyframes slideOutRight {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(100%); opacity: 0; }
            }
        `;
        document.head.appendChild(enhancedStyle);

        // Filter functionality
        document.querySelectorAll('#filters .chip').forEach(chip => {
            chip.addEventListener('click', () => {
                document.querySelectorAll('#filters .chip').forEach(c => c.classList.remove('active'));
                chip.classList.add('active');
                const tag = chip.dataset.tag;
                const challenges = document.querySelectorAll('.challenge-card');
                challenges.forEach(challenge => {
                    if (tag === 'all') {
                        challenge.style.display = 'flex';
                    } else {
                        const challengeTags = (challenge.dataset.tags || '').split(',').map(t => t.trim()).filter(Boolean);
                        challenge.style.display = challengeTags.includes(tag) ? 'flex' : 'none';
                    }
                });
            });
        });

        // Status filter (sidebar)
        document.querySelectorAll('.panel .chip[data-status]').forEach(chip => {
            chip.addEventListener('click', () => {
                const parent = chip.parentElement;
                if (parent) parent.querySelectorAll('.chip').forEach(c => c.classList.remove('active'));
                chip.classList.add('active');
                const status = chip.dataset.status;
                document.querySelectorAll('.challenge-card').forEach(challenge => {
                    const submitBtn = challenge.querySelector('.submit-btn');
                    const isCompleted = submitBtn && submitBtn.classList.contains('submitted');
                    if (status === 'all') {
                        challenge.style.display = 'flex';
                    } else if (status === 'completed') {
                        challenge.style.display = isCompleted ? 'flex' : 'none';
                    } else if (status === 'active') {
                        challenge.style.display = isCompleted ? 'none' : 'flex';
                    }
                });
            });
        });

        // Logout functionality
        const logoutBtn = document.getElementById('logoutBtn');
        if (logoutBtn) {
            logoutBtn.addEventListener('click', () => {
                if (confirm('Are you sure you want to log out?')) {
                    window.location.href = '/logout';
                }
            });
        }
    </script>
</body>
</html>