<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Eco Club - Sign Up</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style nonce="<%= nonce %>">
   :root {
      --primary-color: #2ecc71;
      --secondary-color: #27ae60;
      --accent-color: #55efc4;
      --text-color: #2d3436;
      --light-gray: #f8f9fa;
      --border-color: #dfe6e9;
      --error-color: #e74c3c;
      --bg-gradient-light: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
      --bg-gradient-dark: linear-gradient(135deg, #0f2027 0%, #203a43 50%, #2c5364 100%);
      --card-shadow: 0 20px 40px -10px rgba(0, 0, 0, 0.15);
      --card-shadow-dark: 0 20px 40px -10px rgba(0, 0, 0, 0.3);
    }

    [data-theme="dark"] {
      --primary-color: #55efc4;
      --secondary-color: #00b894;
      --accent-color: #81ecec;
      --text-color: #f5f6fa;
      --light-gray: #2d3436;
      --border-color: #636e72;
      --error-color: #ff7675;
    }

    .sign-up {
      display: flex;
      flex-direction: column;
      gap: 16px;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: var(--bg-gradient-light);
      background-size: 400% 400%;
      animation: bgFlow 15s ease infinite;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      color: var(--text-color);
      transition: all 0.5s ease;
    }

    [data-theme="dark"] body {
      background: var(--bg-gradient-dark);
    }

    @keyframes bgFlow {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    .navbar {
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      width: 100%;
      padding: 1rem 2rem;
      box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: fixed;
      top: 0;
      left: 0;
      z-index: 1000;
      transition: all 0.5s ease;
    }

    [data-theme="dark"] .navbar {
      background: rgba(0, 0, 0, 0.8);
      box-shadow: 0 4px 30px rgba(0, 0, 0, 0.3);
    }

    .nav-logo { 
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
    }

    .nav-logo img {
      height: 42px;
      width: auto;
      transition: all 0.3s ease;
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
    }

    [data-theme="dark"] .nav-logo img {
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3)) brightness(1.1);
    }

    .nav-logo span {
      font-weight: 600;
      font-size: 1.35rem;
      color: var(--primary-color);
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .nav-links {
      display: flex;
      align-items: center;
      gap: 1.5rem;
    }

    .nav-links a {
      text-decoration: none;
      color: var(--text-color);
      font-weight: 500;
      font-size: 0.95rem;
      transition: all 0.3s;
      position: relative;
    }

    .nav-links a:after {
      content: '';
      position: absolute;
      width: 0;
      height: 2px;
      bottom: -4px;
      left: 0;
      background-color: var(--primary-color);
      transition: width 0.3s ease;
    }

    .nav-links a:hover:after {
      width: 100%;
    }

    .nav-links a:hover {
      color: var(--primary-color);
    }

    .theme-toggle {
      background: none;
      border: 2px solid var(--primary-color);
      color: var(--primary-color);
      padding: 0.4rem 1rem;
      border-radius: 30px;
      cursor: pointer;
      font-size: 0.9rem;
      font-weight: 600;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .theme-toggle:hover {
      background: var(--primary-color);
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .theme-toggle i {
      font-size: 1rem;
    }

    .container {
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      padding: 2.5rem 3rem;
      border-radius: 16px;
      box-shadow: var(--card-shadow);
      width: 100%;
      max-width: 500px;
      margin-top: 6rem;
      animation: fadeInUp 1s ease forwards;
      opacity: 0;
      transform: translateY(20px);
      transition: all 0.5s ease;
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    [data-theme="dark"] .container {
      background: rgba(0, 0, 0, 0.7);
      box-shadow: var(--card-shadow-dark);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    @keyframes fadeInUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .header {
      text-align: center;
      margin-bottom: 2.5rem;
    }

    .logo {
      font-size: 2.2rem;
      font-weight: 700;
      color: var(--primary-color);
      margin-bottom: 0.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    .logo i {
      animation: pulse 2s infinite;
    }

    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.1); }
      100% { transform: scale(1); }
    }

    h1 {
      font-size: 1.8rem;
      margin: 0.5rem 0;
      color: var(--text-color);
      font-weight: 600;
    }

    .subtitle {
      color: var(--border-color);
      font-size: 0.95rem;
      margin-top: 0.5rem;
    }

    .form-group {
      margin-bottom: 1.5rem;
      position: relative;
    }

    label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
      font-size: 0.95rem;
    }

    input {
      width: 100%;
      padding: 1rem 1rem 1rem 3rem;
      border: 1px solid var(--border-color);
      border-radius: 8px;
      font-size: 1rem;
      transition: all 0.3s ease;
      background: rgba(255, 255, 255, 0.8);
      color: var(--text-color);
    }

    [data-theme="dark"] input {
      background: rgba(0, 0, 0, 0.5);
    }

    input:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(46, 204, 113, 0.2);
    }

    .input-icon {
      position: absolute;
      left: 1rem;
      top: 50%;
      transform: translateY(-50%);
      color: var(--primary-color);
      font-size: 1.1rem;
    }

    button[type="submit"] {
      width: 100%;
      padding: 1.1rem;
      background-color: var(--primary-color);
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-size: 1rem;
      font-weight: 600;
      margin-top: 1.5rem;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    button[type="submit"]:hover {
      background-color: var(--secondary-color);
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(46, 204, 113, 0.3);
    }

    button[type="submit"]:active {
      transform: translateY(0);
    }

    .login-link {
      text-align: center;
      margin-top: 2rem;
      font-size: 0.95rem;
      color: var(--border-color);
    }

    .login-link a {
      color: var(--primary-color);
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s;
      position: relative;
    }

    .login-link a:after {
      content: '';
      position: absolute;
      width: 0;
      height: 2px;
      bottom: -2px;
      left: 0;
      background-color: var(--primary-color);
      transition: width 0.3s ease;
    }

    .login-link a:hover:after {
      width: 100%;
    }

    .divider {
      display: flex;
      align-items: center;
      margin: 1.5rem 0;
      color: var(--border-color);
      font-size: 0.9rem;
    }

    .divider::before, .divider::after {
      content: "";
      flex: 1;
      border-bottom: 1px solid var(--border-color);
    }

    .divider::before {
      margin-right: 1rem;
    }

    .divider::after {
      margin-left: 1rem;
    }

    .social-login {
      display: flex;
      justify-content: center;
      gap: 1rem;
      margin-top: 1.5rem;
    }

    .social-btn {
      width: 45px;
      height: 45px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      background: white;
      color: #555;
      font-size: 1.2rem;
      transition: all 0.3s ease;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      border: none;
      cursor: pointer;
    }

    [data-theme="dark"] .social-btn {
      background: #333;
      color: #eee;
    }

    .social-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    .social-btn.google { color: #DB4437; }
    .social-btn.facebook { color: #4267B2; }
    .social-btn.apple { color: #000; }

    [data-theme="dark"] .social-btn.apple { color: #fff; }

    .password-hint {
      font-size: 0.8rem;
      color: var(--border-color);
      margin-top: 0.5rem;
      display: flex;
      align-items: center;
      gap: 0.3rem;
    }

    .password-hint i {
      color: var(--primary-color);
      font-size: 0.9rem;
    }

    .terms {
      font-size: 0.8rem;
      color: var(--border-color);
      text-align: center;
      margin-top: 1.5rem;
      line-height: 1.5;
    }

    .terms a {
      color: var(--primary-color);
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s;
    }

    .terms a:hover {
      text-decoration: underline;
    }

    @media (max-width: 600px) {
      .container {
        padding: 2rem 1.5rem;
        margin: 1rem;
        margin-top: 5rem;
      }

      .navbar {
        padding: 1rem;
      }

      .nav-links {
        gap: 1rem;
      }

      .theme-toggle {
        padding: 0.3rem 0.8rem;
        font-size: 0.8rem;
      }

      .logo {
        font-size: 1.8rem;
      }

      h1 {
        font-size: 1.5rem;
      }
    }

    /* Floating leaves decoration */
    .leaf {
      position: absolute;
      opacity: 0.6;
      z-index: -1;
      animation: float 15s infinite linear;
    }

    @keyframes float {
      0% { transform: translateY(0) rotate(0deg); }
      50% { transform: translateY(-20px) rotate(10deg); }
      100% { transform: translateY(0) rotate(0deg); }
    }

    .leaf-1 {
      top: 10%;
      left: 5%;
      font-size: 2rem;
      color: var(--primary-color);
      animation-delay: 0s;
    }

    .leaf-2 {
      top: 70%;
      left: 10%;
      font-size: 1.5rem;
      color: var(--accent-color);
      animation-delay: 2s;
    }

    .leaf-3 {
      top: 30%;
      right: 5%;
      font-size: 2.5rem;
      color: var(--secondary-color);
      animation-delay: 4s;
    }

    .leaf-4 {
      top: 80%;
      right: 10%;
      font-size: 1.8rem;
      color: var(--primary-color);
      animation-delay: 6s;
    }

    /* Password strength meter */
    .password-strength {
      height: 4px;
      background: #eee;
      border-radius: 2px;
      margin-top: 0.5rem;
      overflow: hidden;
      position: relative;
    }

    [data-theme="dark"] .password-strength {
      background: #444;
    }

    .password-strength::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      width: 0;
      background: var(--error-color);
      transition: width 0.3s ease, background 0.3s ease;
    }

    .password-strength[data-strength="1"]::before {
      width: 25%;
      background: var(--error-color);
    }

    .password-strength[data-strength="2"]::before {
      width: 50%;
      background: #f39c12;
    }

    .password-strength[data-strength="3"]::before {
      width: 75%;
      background: #f1c40f;
    }

    .password-strength[data-strength="4"]::before {
      width: 100%;
      background: var(--primary-color);
    }
    

    .error-message {
      color: var(--error-color);
      font-size: 0.8rem;
      margin-top: 0.25rem;
      display: none;
    }

    .input-error {
      border-color: var(--error-color) !important;
      box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.2) !important;
    }

    .password-hint.error {
      color: var(--error-color);
    }
</style>
   

</head>
<body>
  <!-- Floating leaf decorations -->
  <i class="leaf leaf-1 fas fa-leaf"></i>
  <i class="leaf leaf-2 fas fa-leaf"></i>
  <i class="leaf leaf-3 fas fa-leaf"></i>
  <i class="leaf leaf-4 fas fa-leaf"></i>

  <nav class="navbar">
    <a href="/" class="nav-logo">
      <img src="https://cdn-icons-png.flaticon.com/512/3616/3616930.png" alt="Eco Club Logo">
      <span>Eco Club</span>
    </a>
    <div class="nav-links">
      <a href="/">Welcome</a>
      <a href="/login">Log In</a>
      <a href="/sign-up">Sign Up</a>
      <button class="theme-toggle" onclick="toggleTheme()">
        <i class="fas fa-moon"></i> Theme
      </button>
    </div>
  </nav>

  <div class="container">
    <div class="header">
      <div class="logo">
        <i class="fas fa-seedling"></i> Eco Club
      </div>
      <h1>Join Our Green Community</h1>
      <p class="subtitle">Create your account to start making a difference</p>
    </div>

    <form class="sign-up" autocomplete="on">
      <div class="form-group">
        <input
          type="text"
          name="fullName"
          id="fullName"
          placeholder="Full Name"
          autocomplete="name"
          required
        />
        <div class="error-message" id="fullName-error"></div>
      </div>

      <div class="form-group">
        <input
          type="email"
          name="email"
          id="email"
          placeholder="Email"
          autocomplete="email"
          required
        />
        <div class="error-message" id="email-error"></div>
      </div>

      <div class="form-group">
        <input
          type="password"
          name="password"
          id="password"
          placeholder="Create a strong password"
          autocomplete="new-password"
          required
        />
        <div class="error-message" id="password-error"></div>
        <div class="password-hint">
          <i class="fas fa-info-circle"></i> Use at least 8 characters
        </div>
        <div class="password-strength" data-strength="0"></div>
      </div>

      <div class="form-group">
        <input
          type="password"
          name="confirmPassword"
          id="confirmPassword"
          placeholder="Confirm password"
          autocomplete="new-password"
          required
        />
        <div class="error-message" id="confirmPassword-error"></div>
      </div>

      <button type="submit">Sign Up</button>
    </form>

    <div class="login-link">
      Already have an account? <a href="/login">Log in here</a>
    </div>

    <div class="terms">
      By signing up, you agree to our <a href="#">Terms of Service</a> and <a href="#">Privacy Policy</a>.
      We'll occasionally send you account related emails.
    </div>
  </div>

<script nonce="<%= nonce %>">
 // Theme toggle functionality
    function toggleTheme() {
      const html = document.documentElement;
      const current = html.getAttribute('data-theme');
      const next = current === 'light' ? 'dark' : 'light';
      html.setAttribute('data-theme', next);
      
      // Update theme toggle icon
      const themeIcon = document.querySelector('.theme-toggle i');
      if (next === 'dark') {
        themeIcon.className = 'fas fa-sun';
      } else {
        themeIcon.className = 'fas fa-moon';
      }
      
      // Save to localStorage
      localStorage.setItem('ecoClubTheme', next);
    }

    // Container hover animation
    const container = document.querySelector('.container');
    container.addEventListener('mousemove', (e) => {
      const xAxis = (window.innerWidth / 2 - e.pageX) / 25;
      const yAxis = (window.innerHeight / 2 - e.pageY) / 25;
      container.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;
    });

    container.addEventListener('mouseenter', () => {
      container.style.transition = 'all 0.1s ease';
    });

    container.addEventListener('mouseleave', () => {
      container.style.transform = 'rotateY(0deg) rotateX(0deg)';
      container.style.transition = 'all 0.5s ease';
    });

    // Password strength meter
    function calculatePasswordStrength(password) {
      if (!password) return 0;
      
      let strength = 0;
      if (password.length >= 8) strength++;
      if (/[A-Z]/.test(password)) strength++;
      if (/[0-9]/.test(password)) strength++;
      if (/[^A-Za-z0-9]/.test(password)) strength++;
      
      return strength;
    }

    // Form validation and submission
    const form = document.querySelector('.sign-up');

    function displayErrors(errors) {
      Object.keys(errors).forEach(field => {
        showError(field, errors[field]);
      });
    }

    function showError(field, message) {
      const input = document.querySelector(`[name="${field}"]`);
      const errorElement = document.getElementById(`${field}-error`);
      
      if (input && errorElement) {
        input.classList.add('input-error');
        errorElement.textContent = message;
        errorElement.style.display = 'block';
        
        if (field === 'password') {
          const hint = document.querySelector('.password-hint');
          hint.classList.add('error');
        }
      }
    }

    function clearErrors() {
      document.querySelectorAll('.input-error').forEach(el => {
        el.classList.remove('input-error');
      });
      
      document.querySelectorAll('.error-message').forEach(el => {
        el.style.display = 'none';
      });
      
      const hint = document.querySelector('.password-hint');
      hint.classList.remove('error');
    }

    // Form submission handler
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      clearErrors();
      
      // Get form values
      const formData = new FormData(form);
      const formValues = {
        fullName: formData.get('fullName') || '',
        email: formData.get('email') || '',
        password: formData.get('password') || '',
        confirmPassword: formData.get('confirmPassword') || ''
      };

      // Client-side validation
      const errors = {};
      
      if (!formValues.fullName.trim()) {
        errors.fullName = 'Full name is required';
      }
      
      if (!formValues.email.trim()) {
        errors.email = 'Email is required';
      } else if (!/^\S+@\S+\.\S+$/.test(formValues.email)) {
        errors.email = 'Please enter a valid email';
      }
      
      if (!formValues.password) {
        errors.password = 'Password is required';
      } else if (formValues.password.length < 8) {
        errors.password = 'Password must be at least 8 characters';
      }
      
      if (formValues.password !== formValues.confirmPassword) {
        errors.confirmPassword = 'Passwords do not match';
      }

      // Show errors if any
      if (Object.keys(errors).length > 0) {
        displayErrors(errors);
        return;
      }

      try {
        // Prepare data for submission (remove confirmPassword)
      const submissionData = {
  fullName: formValues.fullName, 
  email: formValues.email,
  password: formValues.password
};


        const res = await fetch('/sign-up', {
          method: 'POST',
          body: JSON.stringify(submissionData),
          headers: {
            'Content-Type': 'application/json'
          },
          credentials: 'include'
        });

        const data = await res.json();

        if (!res.ok) {
          if (data.errors) {
            displayErrors(data.errors);
          } else if (data.message) {
            showError('password', data.message);
          } else {
            showError('password', 'An error occurred during registration');
          }
          return;
        }


        window.location.href = '/home';
        
      } catch (error) {
        console.error('Request error:', error);
        showError('password', 'Network error - please try again');
      }
    });

    // Initialize password strength meter
    document.addEventListener('DOMContentLoaded', () => {
      // Load saved theme
      const savedTheme = localStorage.getItem('ecoClubTheme') || 'light';
      document.documentElement.setAttribute('data-theme', savedTheme);
      
      // Set correct icon for theme toggle
      const themeIcon = document.querySelector('.theme-toggle i');
      if (savedTheme === 'dark') {
        themeIcon.className = 'fas fa-sun';
      } else {
        themeIcon.className = 'fas fa-moon';
      }

      // Password strength meter
      const passwordInput = document.getElementById('password');
      const strengthMeter = document.querySelector('.password-strength');
      
      if (passwordInput && strengthMeter) {
        passwordInput.addEventListener('input', function() {
          const strength = calculatePasswordStrength(this.value);
          strengthMeter.setAttribute('data-strength', strength);
        });
      }
    }); </script>
   
</body>
</html>